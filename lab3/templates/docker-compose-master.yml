#docker-compose yml
services:
  db_master:
    image: mysql:5.7
    container_name: mysql_master
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wp_user
      MYSQL_PASSWORD: wp_password
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - db_master_data:/var/lib/mysql
      - ./mysql-master.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
    ports:
      - "3306:3306"
    networks:
      - wordpress_network
    command: --server-id=1 --log-bin=mysql-bin --binlog-format=ROW

  wordpress:
    image: wordpress:6.8.0
    container_name: wordpress_app
    restart: always
    expose:
      - "8080"
    environment:
      WORDPRESS_DB_HOST: db_master:3306
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: wp_user
      WORDPRESS_DB_PASSWORD: wp_password
    depends_on:
      - db_master
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - wordpress_network

  nginx:
    image: nginx:1.28.0
    container_name: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - wordpress_data:/var/www/html
    ports:
      - "80:80"
    depends_on:
      - wordpress
    networks:
      - wordpress_network

  mysql_exporter:
    image: prom/mysqld-exporter
    command:
      - --config.my-cnf=/cfg/.my.cnf
      - --mysqld.address=db_master:3306
    container_name: mysql_exporter
    restart: unless-stopped
    ports:
      - "9104:9104"  # Открываем порт 9104 на хосте
    volumes:
      - ./exp.cnf:/cfg/.my.cnf # Файлик с конфигом для экспортера
    networks:
      - wordpress_network
    depends_on:
      - db_master

networks:
  wordpress_network:
    driver: bridge

volumes:
  db_master_data:
  wordpress_data: